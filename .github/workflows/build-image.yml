name: Build Docker Image

on:
  workflow_call:
    inputs:
      context:
        type: string
      dockerfile:
        default: Dockerfile
        type: string
      image-name:
        type: string
      registry:
        default: ghcr.io
        type: string
      platforms:
        default: linux/amd64,linux/arm64
        type: string
    outputs:
      image-name:
        description: "Built image name"
        value: ${{ jobs.build-image.outputs.image-name }}
      metadata:
        description: "Built image metadata"
        value: ${{ jobs.build-image.outputs.metadata }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
        image-name: ${{ steps.image-name.outputs.image-name }}
        metadata: ${{ steps.build.outputs.metadata }}
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}

      - name: Configure Docker Caching
        id: cache
        uses: int128/docker-build-cache-config-action@v1
        with:
          image: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image-name }}/cache

      - name: Build and Push Docker Image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}

      - id: image-name
        run: echo "image-name=${{ fromJSON(steps.build.outputs.metadata)['image.name'] }}" >> $GITHUB_OUTPUT
